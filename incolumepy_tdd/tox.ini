[tox]
envlist =
  py{36,37,38}
  clean,
  lint,
  stats
skipsdist = True

[testenv]
setenv = LANG=pt_BR.UTF-8
exclude =
  # Diretories not verified
  .eggs/,
  .git/
  .tox/,
  build/,
  dist/,

max-line-length = 120
deps =
  pipenv
  nose

commands =
  pipenv install -d --skip-lock
  nosetests

[PEP8]
# define para todos os linters
max-line-length = 120

[pylava]
format = pylint
async = 1
# ignore = D203,D213,F0401,C0111,E731,I0011
# linters = pycodestyle,pyflakes,mccabe,pydocstyle,pylint
paths = src
# skip = pylava/inirama.py,pylava/libs/*
verbose = 0

[pycodestyle]
max_line_length = 120

[mccabe]
max_complexity = 5

[flake8]
ignore =
exclude =
  # Diretories not verified
  .tox/,
  .eggs/,
  build/,
  dist/,
  .git/,
  exemplos/,
  relatorios,
  src_production

max-line-length = 120
max-complexity = 10


[lint]
skip =
  .eggs/*,
  .git/*
  .tox/*,
  build/*
  dist/*,
  exemplos/*

[testenv:clean]
deps = coverage

commands =
  coverage erase


[testenv:lint]
deps =
  pipenv
  pylava
  flake8

commands =
  pipenv install -d --skip-lock
  pylava --options tox.ini incolumepy/
  flake8 --config tox.ini incolumepy/

[testenv:stats]
deps =
  pipenv
  coverage
commands =
  pipenv install -d --skip-lock
  coverage run --source=incolumepy -m unittest discover -s tests/ -v
  coverage report
  coverage html

[coverage:run]
[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    except ImportError:
